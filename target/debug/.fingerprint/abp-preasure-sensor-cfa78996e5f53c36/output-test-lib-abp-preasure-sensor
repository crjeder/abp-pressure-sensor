{"message":"failed to resolve: could not find `std` in the list of imported crates","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":21420,"byte_end":21423,"line_start":631,"line_end":631,"column_start":16,"column_end":19,"is_primary":true,"text":[{"text":"        impl ::std::fmt::Display for $name {","highlight_start":16,"highlight_end":19}],"label":"could not find `std` in the list of imported crates","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":12051,"byte_end":12185,"line_start":411,"line_end":413,"column_start":9,"column_end":16,"is_primary":false,"text":[{"text":"        quick_error!(IMPLEMENTATIONS $name {$(","highlight_start":9,"highlight_end":47},{"text":"           $iitem: $imode [$(#[$imeta])*] [$( $ivar: $ityp ),*] {$( $ifuncs )*}","highlight_start":1,"highlight_end":80},{"text":"           )*});","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":16415,"byte_end":16685,"line_start":510,"line_end":514,"column_start":9,"column_end":33,"is_primary":false,"text":[{"text":"        quick_error!(SORT [$( $def )*]","highlight_start":9,"highlight_end":39},{"text":"            items [$( $(#[$imeta])* => $iitem: $imode [$( $ivar:$ityp ),*] {$( $ifuncs )*} )*","highlight_start":1,"highlight_end":94},{"text":"                      $(#[$bmeta])* => $bitem: $bmode [$( $bvar:$btyp ),*] {$( $qfuncs )*} ]","highlight_start":1,"highlight_end":93},{"text":"            buf [ ]","highlight_start":1,"highlight_end":20},{"text":"            queue [$( $tail )*]);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":13131,"byte_end":13365,"line_start":439,"line_end":443,"column_start":9,"column_end":33,"is_primary":false,"text":[{"text":"        quick_error!(SORT [$( $def )*]","highlight_start":9,"highlight_end":39},{"text":"            items [$( $(#[$imeta])*","highlight_start":1,"highlight_end":36},{"text":"                      => $iitem: $imode [$( $ivar:$ityp ),*] {$( $ifuncs )*} )*]","highlight_start":1,"highlight_end":81},{"text":"            buf [$(#[$bmeta])* => $qitem : UNIT [ ] ]","highlight_start":1,"highlight_end":54},{"text":"            queue [$( $tail )*]);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8509,"byte_end":8620,"line_start":303,"line_end":305,"column_start":9,"column_end":35,"is_primary":false,"text":[{"text":"        quick_error!(SORT [pub enum $name $(#[$meta])* ]","highlight_start":9,"highlight_end":57},{"text":"            items [] buf []","highlight_start":1,"highlight_end":28},{"text":"            queue [ $($chunks)* ]);","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\lib.rs","byte_start":1143,"byte_end":1401,"line_start":46,"line_end":54,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"quick_error!","highlight_start":1,"highlight_end":13},{"text":"{","highlight_start":1,"highlight_end":2},{"text":"    #[derive(Debug, Copy, Clone)]","highlight_start":1,"highlight_end":34},{"text":"    pub enum AbpError","highlight_start":1,"highlight_end":22},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"        ErrorCommandMode {display(\"Unable to read datat. Sensor is in command mode.\")}","highlight_start":1,"highlight_end":87},{"text":"        ErrorDiagnosticState {display(\"Error: Sensor is in diagnostic state\")}","highlight_start":1,"highlight_end":79},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: could not find `std` in the list of imported crates\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:46:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mquick_error!\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Debug, Copy, Clone)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum AbpError\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `std` in the list of imported crates\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `quick_error` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"failed to resolve: could not find `std` in the list of imported crates","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":21488,"byte_end":21491,"line_start":632,"line_end":632,"column_start":39,"column_end":42,"is_primary":true,"text":[{"text":"            fn fmt(&self, fmt: &mut ::std::fmt::Formatter<'_>)","highlight_start":39,"highlight_end":42}],"label":"could not find `std` in the list of imported crates","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":12051,"byte_end":12185,"line_start":411,"line_end":413,"column_start":9,"column_end":16,"is_primary":false,"text":[{"text":"        quick_error!(IMPLEMENTATIONS $name {$(","highlight_start":9,"highlight_end":47},{"text":"           $iitem: $imode [$(#[$imeta])*] [$( $ivar: $ityp ),*] {$( $ifuncs )*}","highlight_start":1,"highlight_end":80},{"text":"           )*});","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":16415,"byte_end":16685,"line_start":510,"line_end":514,"column_start":9,"column_end":33,"is_primary":false,"text":[{"text":"        quick_error!(SORT [$( $def )*]","highlight_start":9,"highlight_end":39},{"text":"            items [$( $(#[$imeta])* => $iitem: $imode [$( $ivar:$ityp ),*] {$( $ifuncs )*} )*","highlight_start":1,"highlight_end":94},{"text":"                      $(#[$bmeta])* => $bitem: $bmode [$( $bvar:$btyp ),*] {$( $qfuncs )*} ]","highlight_start":1,"highlight_end":93},{"text":"            buf [ ]","highlight_start":1,"highlight_end":20},{"text":"            queue [$( $tail )*]);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":13131,"byte_end":13365,"line_start":439,"line_end":443,"column_start":9,"column_end":33,"is_primary":false,"text":[{"text":"        quick_error!(SORT [$( $def )*]","highlight_start":9,"highlight_end":39},{"text":"            items [$( $(#[$imeta])*","highlight_start":1,"highlight_end":36},{"text":"                      => $iitem: $imode [$( $ivar:$ityp ),*] {$( $ifuncs )*} )*]","highlight_start":1,"highlight_end":81},{"text":"            buf [$(#[$bmeta])* => $qitem : UNIT [ ] ]","highlight_start":1,"highlight_end":54},{"text":"            queue [$( $tail )*]);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8509,"byte_end":8620,"line_start":303,"line_end":305,"column_start":9,"column_end":35,"is_primary":false,"text":[{"text":"        quick_error!(SORT [pub enum $name $(#[$meta])* ]","highlight_start":9,"highlight_end":57},{"text":"            items [] buf []","highlight_start":1,"highlight_end":28},{"text":"            queue [ $($chunks)* ]);","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\lib.rs","byte_start":1143,"byte_end":1401,"line_start":46,"line_end":54,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"quick_error!","highlight_start":1,"highlight_end":13},{"text":"{","highlight_start":1,"highlight_end":2},{"text":"    #[derive(Debug, Copy, Clone)]","highlight_start":1,"highlight_end":34},{"text":"    pub enum AbpError","highlight_start":1,"highlight_end":22},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"        ErrorCommandMode {display(\"Unable to read datat. Sensor is in command mode.\")}","highlight_start":1,"highlight_end":87},{"text":"        ErrorDiagnosticState {display(\"Error: Sensor is in diagnostic state\")}","highlight_start":1,"highlight_end":79},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: could not find `std` in the list of imported crates\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:46:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mquick_error!\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Debug, Copy, Clone)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum AbpError\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `std` in the list of imported crates\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `quick_error` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"failed to resolve: could not find `std` in the list of imported crates","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":21534,"byte_end":21537,"line_start":633,"line_end":633,"column_start":22,"column_end":25,"is_primary":true,"text":[{"text":"                -> ::std::fmt::Result","highlight_start":22,"highlight_end":25}],"label":"could not find `std` in the list of imported crates","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":12051,"byte_end":12185,"line_start":411,"line_end":413,"column_start":9,"column_end":16,"is_primary":false,"text":[{"text":"        quick_error!(IMPLEMENTATIONS $name {$(","highlight_start":9,"highlight_end":47},{"text":"           $iitem: $imode [$(#[$imeta])*] [$( $ivar: $ityp ),*] {$( $ifuncs )*}","highlight_start":1,"highlight_end":80},{"text":"           )*});","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":16415,"byte_end":16685,"line_start":510,"line_end":514,"column_start":9,"column_end":33,"is_primary":false,"text":[{"text":"        quick_error!(SORT [$( $def )*]","highlight_start":9,"highlight_end":39},{"text":"            items [$( $(#[$imeta])* => $iitem: $imode [$( $ivar:$ityp ),*] {$( $ifuncs )*} )*","highlight_start":1,"highlight_end":94},{"text":"                      $(#[$bmeta])* => $bitem: $bmode [$( $bvar:$btyp ),*] {$( $qfuncs )*} ]","highlight_start":1,"highlight_end":93},{"text":"            buf [ ]","highlight_start":1,"highlight_end":20},{"text":"            queue [$( $tail )*]);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":13131,"byte_end":13365,"line_start":439,"line_end":443,"column_start":9,"column_end":33,"is_primary":false,"text":[{"text":"        quick_error!(SORT [$( $def )*]","highlight_start":9,"highlight_end":39},{"text":"            items [$( $(#[$imeta])*","highlight_start":1,"highlight_end":36},{"text":"                      => $iitem: $imode [$( $ivar:$ityp ),*] {$( $ifuncs )*} )*]","highlight_start":1,"highlight_end":81},{"text":"            buf [$(#[$bmeta])* => $qitem : UNIT [ ] ]","highlight_start":1,"highlight_end":54},{"text":"            queue [$( $tail )*]);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8509,"byte_end":8620,"line_start":303,"line_end":305,"column_start":9,"column_end":35,"is_primary":false,"text":[{"text":"        quick_error!(SORT [pub enum $name $(#[$meta])* ]","highlight_start":9,"highlight_end":57},{"text":"            items [] buf []","highlight_start":1,"highlight_end":28},{"text":"            queue [ $($chunks)* ]);","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\lib.rs","byte_start":1143,"byte_end":1401,"line_start":46,"line_end":54,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"quick_error!","highlight_start":1,"highlight_end":13},{"text":"{","highlight_start":1,"highlight_end":2},{"text":"    #[derive(Debug, Copy, Clone)]","highlight_start":1,"highlight_end":34},{"text":"    pub enum AbpError","highlight_start":1,"highlight_end":22},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"        ErrorCommandMode {display(\"Unable to read datat. Sensor is in command mode.\")}","highlight_start":1,"highlight_end":87},{"text":"        ErrorDiagnosticState {display(\"Error: Sensor is in diagnostic state\")}","highlight_start":1,"highlight_end":79},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: could not find `std` in the list of imported crates\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:46:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mquick_error!\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Debug, Copy, Clone)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum AbpError\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `std` in the list of imported crates\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `quick_error` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"failed to resolve: could not find `std` in the list of imported crates","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":23666,"byte_end":23669,"line_start":691,"line_end":691,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"        |_, f: &mut ::std::fmt::Formatter<'_>| { write!(f, $pattern) }","highlight_start":23,"highlight_end":26}],"label":"could not find `std` in the list of imported crates","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":21848,"byte_end":21978,"line_start":641,"line_end":643,"column_start":46,"column_end":48,"is_primary":false,"text":[{"text":"                            let display_fn = quick_error!(FIND_DISPLAY_IMPL","highlight_start":46,"highlight_end":76},{"text":"                                $name $item: $imode","highlight_start":1,"highlight_end":52},{"text":"                                {$( $funcs )*});","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":12051,"byte_end":12185,"line_start":411,"line_end":413,"column_start":9,"column_end":16,"is_primary":false,"text":[{"text":"        quick_error!(IMPLEMENTATIONS $name {$(","highlight_start":9,"highlight_end":47},{"text":"           $iitem: $imode [$(#[$imeta])*] [$( $ivar: $ityp ),*] {$( $ifuncs )*}","highlight_start":1,"highlight_end":80},{"text":"           )*});","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":16415,"byte_end":16685,"line_start":510,"line_end":514,"column_start":9,"column_end":33,"is_primary":false,"text":[{"text":"        quick_error!(SORT [$( $def )*]","highlight_start":9,"highlight_end":39},{"text":"            items [$( $(#[$imeta])* => $iitem: $imode [$( $ivar:$ityp ),*] {$( $ifuncs )*} )*","highlight_start":1,"highlight_end":94},{"text":"                      $(#[$bmeta])* => $bitem: $bmode [$( $bvar:$btyp ),*] {$( $qfuncs )*} ]","highlight_start":1,"highlight_end":93},{"text":"            buf [ ]","highlight_start":1,"highlight_end":20},{"text":"            queue [$( $tail )*]);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":13131,"byte_end":13365,"line_start":439,"line_end":443,"column_start":9,"column_end":33,"is_primary":false,"text":[{"text":"        quick_error!(SORT [$( $def )*]","highlight_start":9,"highlight_end":39},{"text":"            items [$( $(#[$imeta])*","highlight_start":1,"highlight_end":36},{"text":"                      => $iitem: $imode [$( $ivar:$ityp ),*] {$( $ifuncs )*} )*]","highlight_start":1,"highlight_end":81},{"text":"            buf [$(#[$bmeta])* => $qitem : UNIT [ ] ]","highlight_start":1,"highlight_end":54},{"text":"            queue [$( $tail )*]);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8509,"byte_end":8620,"line_start":303,"line_end":305,"column_start":9,"column_end":35,"is_primary":false,"text":[{"text":"        quick_error!(SORT [pub enum $name $(#[$meta])* ]","highlight_start":9,"highlight_end":57},{"text":"            items [] buf []","highlight_start":1,"highlight_end":28},{"text":"            queue [ $($chunks)* ]);","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\lib.rs","byte_start":1143,"byte_end":1401,"line_start":46,"line_end":54,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"quick_error!","highlight_start":1,"highlight_end":13},{"text":"{","highlight_start":1,"highlight_end":2},{"text":"    #[derive(Debug, Copy, Clone)]","highlight_start":1,"highlight_end":34},{"text":"    pub enum AbpError","highlight_start":1,"highlight_end":22},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"        ErrorCommandMode {display(\"Unable to read datat. Sensor is in command mode.\")}","highlight_start":1,"highlight_end":87},{"text":"        ErrorDiagnosticState {display(\"Error: Sensor is in diagnostic state\")}","highlight_start":1,"highlight_end":79},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: could not find `std` in the list of imported crates\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:46:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mquick_error!\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Debug, Copy, Clone)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum AbpError\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `std` in the list of imported crates\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `quick_error` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"failed to resolve: could not find `std` in the list of imported crates","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":23666,"byte_end":23669,"line_start":691,"line_end":691,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"        |_, f: &mut ::std::fmt::Formatter<'_>| { write!(f, $pattern) }","highlight_start":23,"highlight_end":26}],"label":"could not find `std` in the list of imported crates","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":21848,"byte_end":21978,"line_start":641,"line_end":643,"column_start":46,"column_end":48,"is_primary":false,"text":[{"text":"                            let display_fn = quick_error!(FIND_DISPLAY_IMPL","highlight_start":46,"highlight_end":76},{"text":"                                $name $item: $imode","highlight_start":1,"highlight_end":52},{"text":"                                {$( $funcs )*});","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":12051,"byte_end":12185,"line_start":411,"line_end":413,"column_start":9,"column_end":16,"is_primary":false,"text":[{"text":"        quick_error!(IMPLEMENTATIONS $name {$(","highlight_start":9,"highlight_end":47},{"text":"           $iitem: $imode [$(#[$imeta])*] [$( $ivar: $ityp ),*] {$( $ifuncs )*}","highlight_start":1,"highlight_end":80},{"text":"           )*});","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":16415,"byte_end":16685,"line_start":510,"line_end":514,"column_start":9,"column_end":33,"is_primary":false,"text":[{"text":"        quick_error!(SORT [$( $def )*]","highlight_start":9,"highlight_end":39},{"text":"            items [$( $(#[$imeta])* => $iitem: $imode [$( $ivar:$ityp ),*] {$( $ifuncs )*} )*","highlight_start":1,"highlight_end":94},{"text":"                      $(#[$bmeta])* => $bitem: $bmode [$( $bvar:$btyp ),*] {$( $qfuncs )*} ]","highlight_start":1,"highlight_end":93},{"text":"            buf [ ]","highlight_start":1,"highlight_end":20},{"text":"            queue [$( $tail )*]);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":13131,"byte_end":13365,"line_start":439,"line_end":443,"column_start":9,"column_end":33,"is_primary":false,"text":[{"text":"        quick_error!(SORT [$( $def )*]","highlight_start":9,"highlight_end":39},{"text":"            items [$( $(#[$imeta])*","highlight_start":1,"highlight_end":36},{"text":"                      => $iitem: $imode [$( $ivar:$ityp ),*] {$( $ifuncs )*} )*]","highlight_start":1,"highlight_end":81},{"text":"            buf [$(#[$bmeta])* => $qitem : UNIT [ ] ]","highlight_start":1,"highlight_end":54},{"text":"            queue [$( $tail )*]);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8509,"byte_end":8620,"line_start":303,"line_end":305,"column_start":9,"column_end":35,"is_primary":false,"text":[{"text":"        quick_error!(SORT [pub enum $name $(#[$meta])* ]","highlight_start":9,"highlight_end":57},{"text":"            items [] buf []","highlight_start":1,"highlight_end":28},{"text":"            queue [ $($chunks)* ]);","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\lib.rs","byte_start":1143,"byte_end":1401,"line_start":46,"line_end":54,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"quick_error!","highlight_start":1,"highlight_end":13},{"text":"{","highlight_start":1,"highlight_end":2},{"text":"    #[derive(Debug, Copy, Clone)]","highlight_start":1,"highlight_end":34},{"text":"    pub enum AbpError","highlight_start":1,"highlight_end":22},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"        ErrorCommandMode {display(\"Unable to read datat. Sensor is in command mode.\")}","highlight_start":1,"highlight_end":87},{"text":"        ErrorDiagnosticState {display(\"Error: Sensor is in diagnostic state\")}","highlight_start":1,"highlight_end":79},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: could not find `std` in the list of imported crates\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:46:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mquick_error!\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Debug, Copy, Clone)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum AbpError\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `std` in the list of imported crates\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `quick_error` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"failed to resolve: could not find `std` in the list of imported crates","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":22364,"byte_end":22367,"line_start":656,"line_end":656,"column_start":16,"column_end":19,"is_primary":true,"text":[{"text":"        impl ::std::error::Error for $name {","highlight_start":16,"highlight_end":19}],"label":"could not find `std` in the list of imported crates","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":12051,"byte_end":12185,"line_start":411,"line_end":413,"column_start":9,"column_end":16,"is_primary":false,"text":[{"text":"        quick_error!(IMPLEMENTATIONS $name {$(","highlight_start":9,"highlight_end":47},{"text":"           $iitem: $imode [$(#[$imeta])*] [$( $ivar: $ityp ),*] {$( $ifuncs )*}","highlight_start":1,"highlight_end":80},{"text":"           )*});","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":16415,"byte_end":16685,"line_start":510,"line_end":514,"column_start":9,"column_end":33,"is_primary":false,"text":[{"text":"        quick_error!(SORT [$( $def )*]","highlight_start":9,"highlight_end":39},{"text":"            items [$( $(#[$imeta])* => $iitem: $imode [$( $ivar:$ityp ),*] {$( $ifuncs )*} )*","highlight_start":1,"highlight_end":94},{"text":"                      $(#[$bmeta])* => $bitem: $bmode [$( $bvar:$btyp ),*] {$( $qfuncs )*} ]","highlight_start":1,"highlight_end":93},{"text":"            buf [ ]","highlight_start":1,"highlight_end":20},{"text":"            queue [$( $tail )*]);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":13131,"byte_end":13365,"line_start":439,"line_end":443,"column_start":9,"column_end":33,"is_primary":false,"text":[{"text":"        quick_error!(SORT [$( $def )*]","highlight_start":9,"highlight_end":39},{"text":"            items [$( $(#[$imeta])*","highlight_start":1,"highlight_end":36},{"text":"                      => $iitem: $imode [$( $ivar:$ityp ),*] {$( $ifuncs )*} )*]","highlight_start":1,"highlight_end":81},{"text":"            buf [$(#[$bmeta])* => $qitem : UNIT [ ] ]","highlight_start":1,"highlight_end":54},{"text":"            queue [$( $tail )*]);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8509,"byte_end":8620,"line_start":303,"line_end":305,"column_start":9,"column_end":35,"is_primary":false,"text":[{"text":"        quick_error!(SORT [pub enum $name $(#[$meta])* ]","highlight_start":9,"highlight_end":57},{"text":"            items [] buf []","highlight_start":1,"highlight_end":28},{"text":"            queue [ $($chunks)* ]);","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\lib.rs","byte_start":1143,"byte_end":1401,"line_start":46,"line_end":54,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"quick_error!","highlight_start":1,"highlight_end":13},{"text":"{","highlight_start":1,"highlight_end":2},{"text":"    #[derive(Debug, Copy, Clone)]","highlight_start":1,"highlight_end":34},{"text":"    pub enum AbpError","highlight_start":1,"highlight_end":22},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"        ErrorCommandMode {display(\"Unable to read datat. Sensor is in command mode.\")}","highlight_start":1,"highlight_end":87},{"text":"        ErrorDiagnosticState {display(\"Error: Sensor is in diagnostic state\")}","highlight_start":1,"highlight_end":79},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: could not find `std` in the list of imported crates\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:46:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mquick_error!\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Debug, Copy, Clone)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum AbpError\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `std` in the list of imported crates\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `quick_error` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared crate or module `std`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":22439,"byte_end":22442,"line_start":657,"line_end":657,"column_start":46,"column_end":49,"is_primary":true,"text":[{"text":"            fn source(&self) -> Option<&(dyn std::error::Error + 'static)> {","highlight_start":46,"highlight_end":49}],"label":"use of undeclared crate or module `std`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":12051,"byte_end":12185,"line_start":411,"line_end":413,"column_start":9,"column_end":16,"is_primary":false,"text":[{"text":"        quick_error!(IMPLEMENTATIONS $name {$(","highlight_start":9,"highlight_end":47},{"text":"           $iitem: $imode [$(#[$imeta])*] [$( $ivar: $ityp ),*] {$( $ifuncs )*}","highlight_start":1,"highlight_end":80},{"text":"           )*});","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":16415,"byte_end":16685,"line_start":510,"line_end":514,"column_start":9,"column_end":33,"is_primary":false,"text":[{"text":"        quick_error!(SORT [$( $def )*]","highlight_start":9,"highlight_end":39},{"text":"            items [$( $(#[$imeta])* => $iitem: $imode [$( $ivar:$ityp ),*] {$( $ifuncs )*} )*","highlight_start":1,"highlight_end":94},{"text":"                      $(#[$bmeta])* => $bitem: $bmode [$( $bvar:$btyp ),*] {$( $qfuncs )*} ]","highlight_start":1,"highlight_end":93},{"text":"            buf [ ]","highlight_start":1,"highlight_end":20},{"text":"            queue [$( $tail )*]);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":13131,"byte_end":13365,"line_start":439,"line_end":443,"column_start":9,"column_end":33,"is_primary":false,"text":[{"text":"        quick_error!(SORT [$( $def )*]","highlight_start":9,"highlight_end":39},{"text":"            items [$( $(#[$imeta])*","highlight_start":1,"highlight_end":36},{"text":"                      => $iitem: $imode [$( $ivar:$ityp ),*] {$( $ifuncs )*} )*]","highlight_start":1,"highlight_end":81},{"text":"            buf [$(#[$bmeta])* => $qitem : UNIT [ ] ]","highlight_start":1,"highlight_end":54},{"text":"            queue [$( $tail )*]);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8509,"byte_end":8620,"line_start":303,"line_end":305,"column_start":9,"column_end":35,"is_primary":false,"text":[{"text":"        quick_error!(SORT [pub enum $name $(#[$meta])* ]","highlight_start":9,"highlight_end":57},{"text":"            items [] buf []","highlight_start":1,"highlight_end":28},{"text":"            queue [ $($chunks)* ]);","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\lib.rs","byte_start":1143,"byte_end":1401,"line_start":46,"line_end":54,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"quick_error!","highlight_start":1,"highlight_end":13},{"text":"{","highlight_start":1,"highlight_end":2},{"text":"    #[derive(Debug, Copy, Clone)]","highlight_start":1,"highlight_end":34},{"text":"    pub enum AbpError","highlight_start":1,"highlight_end":22},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"        ErrorCommandMode {display(\"Unable to read datat. Sensor is in command mode.\")}","highlight_start":1,"highlight_end":87},{"text":"        ErrorDiagnosticState {display(\"Error: Sensor is in diagnostic state\")}","highlight_start":1,"highlight_end":79},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"quick_error!","def_site_span":{"file_name":"C:\\Users\\puck-\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-error-2.0.1\\src\\lib.rs","byte_start":8388,"byte_end":8412,"line_start":298,"line_end":298,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quick_error {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared crate or module `std`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:46:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mquick_error!\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Debug, Copy, Clone)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum AbpError\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `std`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `quick_error` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"unused import: `block`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\lib.rs","byte_start":1028,"byte_end":1033,"line_start":40,"line_end":40,"column_start":16,"column_end":21,"is_primary":true,"text":[{"text":"use nb::{self, block};","highlight_start":16,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\lib.rs","byte_start":1026,"byte_end":1033,"line_start":40,"line_end":40,"column_start":14,"column_end":21,"is_primary":true,"text":[{"text":"use nb::{self, block};","highlight_start":14,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `block`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:40:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse nb::{self, block};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"aborting due to 7 previous errors; 1 warning emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 7 previous errors; 1 warning emitted\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0433`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0433`.\u001b[0m\n"}
